{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format

    // These Python project tasks assume you have installed
    // and configured: black, coverage, pytest, Sphinx and wheel
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Clean",
            "type": "process",
            "command": "rm",
            "args": [
                "-rfv",
                "build",
                "dist",
                "htmlcov",
                "docs/html",
                "${config:modulename}.egg-info/",
                "${config:modulename}-*/",
                "${config:modulename}/__pycache__"
            ],
            "windows": {
                "command": "del",
                "args": [
                    "/S /Q",
                    "build",
                    "dist",
                    "htmlcov",
                    "docs/html",
                    "${config:modulename}.egg-info/",
                    "${config:modulename}-*/",
                    "${config:modulename}/__pycache__"
                ]
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": []
        },
        {
            "label": "Format",
            "type": "process",
            "command": "${config:python.pythonPath}",
            "args": [
                "-m",
                "black",
                "${config:modulename}"
            ],
            "problemMatcher": []
        },
        {
            "label": "Analyse",
            "type": "process",
            "command": "${config:python.pythonPath}",
            "args": [
                "-m",
                "pylint",
                "--reports=y",
                "${config:modulename}"
            ],
            "problemMatcher": []
        },
        {
            "label": "Build",
            "type": "process",
            "command": "${config:python.pythonPath}",
            "args": [
                "${workspaceFolder}/setup.py",
                "sdist",
                "bdist_wheel"
            ],
            "problemMatcher": []
        },
        {
            "label": "Test",
            "type": "process",
            "command": "${config:python.pythonPath}",
            "args": [
                "${workspaceFolder}/tests/testsuite.py"
            ],
            "problemMatcher": []
        },
        {
            "label": "Coverage",
            "type": "process",
            "command": "${config:python.pythonPath}",
            "args": [
                "-m",
                "coverage",
                "run",
                "--source=${config:modulename}",
                "-m",
                "pytest"
            ],
            "problemMatcher": []
        },
        {
            "label": "Coverage Report",
            "type": "process",
            "command": "${config:python.pythonPath}",
            "args": [
                "-m",
                "coverage",
                "html"
            ],
            "dependsOrder": "sequence",
            "dependsOn": ["Coverage"],
            "problemMatcher": []
        },
        {
            "label": "Sphinx",
            "type": "process",
            "command": "sphinx-apidoc",
            "args": [
                "-f", 
                "-o",
                "docs",
                "${config:modulename}"
            ],
            "problemMatcher": []
        },
        {
            "label": "Sphinx HTML",
            "type": "process",
            "command": "/usr/bin/make",
            "windows": {
                "command": "${workspaceFolder}/docs/make.bat"
            },
            "args": [
                "html"
            ],
            "options": {
                "cwd": "${workspaceFolder}/docs"
            },
            "dependsOrder": "sequence",
            "dependsOn": ["Sphinx"],
            "problemMatcher": []
        },
        {
            "label": "Install Locally",
            "type": "process",
            "command": "${config:python.pythonPath}",
            "args": [
                "-m",
                "pip",
                "install",
                "${workspaceFolder}/dist/${config:modulename}-${config:moduleversion}.tar.gz",
                "--user",
                "--force-reinstall"
            ],
            "dependsOrder": "sequence",
            "dependsOn": ["Clean", "Format", "Analyze", "Build", "Test", "Coverage Report", "Sphinx HTML"],
            "problemMatcher": []
        },
    ]
}